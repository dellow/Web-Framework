// ==========================================================================
// Base > Typeset
// App fonts and type settings.
// ==========================================================================


html {
  font-size: 100%;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  font-size: $base_font_size;
  line-height: 1.62;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -moz-font-feature-settings: "liga" on;
  font-family: $base_font;
  word-wrap: break-word;
  letter-spacing: 0.02em;
  color: color(copy, body);
}


// ----------------------------------------------------------------------- //


h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {
  font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
  font-weight: $bold;
  &:first-child {
    margin-top: 0;
  }
}
h1, .h1 {
  @include scale(font-size, $h1,
    $tablet_l (($h1 / 100) * 90),
    $tablet_p (($h1 / 100) * 85),
    $mobile_l (($h1 / 100) * 80),
    $mobile_p (($h1 / 100) * 75),
    $device_p (($h1 / 100) * 70)
  );
  @include scale(line-height, $h1_lh,
    $tablet_l (($h1_lh / 100) * 105),
    $tablet_p (($h1_lh / 100) * 105),
    $mobile_l (($h1_lh / 100) * 110),
    $mobile_p (($h1_lh / 100) * 110),
    $device_p (($h1_lh / 100) * 110)
  );
}
h2, .h2 {
  @include scale(font-size, $h2,
    $tablet_l (($h2 / 100) * 90),
    $tablet_p (($h2 / 100) * 85),
    $mobile_l (($h2 / 100) * 80),
    $mobile_p (($h2 / 100) * 75),
    $device_p (($h2 / 100) * 70)
  );
  @include scale(line-height, $h2_lh,
    $tablet_l (($h2_lh / 100) * 105),
    $tablet_p (($h2_lh / 100) * 105),
    $mobile_l (($h2_lh / 100) * 110),
    $mobile_p (($h2_lh / 100) * 110),
    $device_p (($h2_lh / 100) * 110)
  );
}
h3, .h3 {
  @include scale(font-size, $h3,
    $tablet_l (($h3 / 100) * 90),
    $tablet_p (($h3 / 100) * 85),
    $mobile_l (($h3 / 100) * 80),
    $mobile_p (($h3 / 100) * 75),
    $device_p (($h3 / 100) * 70)
  );
  @include scale(line-height, $h3_lh,
    $tablet_l (($h3_lh / 100) * 105),
    $tablet_p (($h3_lh / 100) * 105),
    $mobile_l (($h3_lh / 100) * 110),
    $mobile_p (($h3_lh / 100) * 110),
    $device_p (($h3_lh / 100) * 110)
  );
}
h4, .h4 {
  @include scale(font-size, $h4,
    $tablet_l (($h4 / 100) * 90),
    $tablet_p (($h4 / 100) * 85),
    $mobile_l (($h4 / 100) * 80),
    $mobile_p (($h4 / 100) * 75),
    $device_p (($h4 / 100) * 70)
  );
  @include scale(line-height, $h4_lh,
    $tablet_l (($h4_lh / 100) * 105),
    $tablet_p (($h4_lh / 100) * 105),
    $mobile_l (($h4_lh / 100) * 110),
    $mobile_p (($h4_lh / 100) * 110),
    $device_p (($h4_lh / 100) * 110)
  );
}
h5, .h5 {
  @include scale(font-size, $h5,
    $tablet_l (($h5 / 100) * 90),
    $tablet_p (($h5 / 100) * 85),
    $mobile_l (($h5 / 100) * 80),
    $mobile_p (($h5 / 100) * 75),
    $device_p (($h5 / 100) * 70)
  );
  @include scale(line-height, $h5_lh,
    $tablet_l (($h5_lh / 100) * 105),
    $tablet_p (($h5_lh / 100) * 105),
    $mobile_l (($h5_lh / 100) * 110),
    $mobile_p (($h5_lh / 100) * 110),
    $device_p (($h5_lh / 100) * 110)
  );
}
h6, .h6 {
  @include scale(font-size, $h6,
    $tablet_l (($h6 / 100) * 90),
    $tablet_p (($h6 / 100) * 85),
    $mobile_l (($h6 / 100) * 80),
    $mobile_p (($h6 / 100) * 75),
    $device_p (($h6 / 100) * 70)
  );
  @include scale(line-height, $h6_lh,
    $tablet_l (($h6_lh / 100) * 105),
    $tablet_p (($h6_lh / 100) * 105),
    $mobile_l (($h6_lh / 100) * 110),
    $mobile_p (($h6_lh / 100) * 110),
    $device_p (($h6_lh / 100) * 110)
  );
}


// ----------------------------------------------------------------------- //


p, li, dd {
  font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
}


// ----------------------------------------------------------------------- //


a, button {
  color: color(copy, link);
  text-decoration: none;
  transition: color $animation ease, background $animation ease;
  &:hover {
    color: color(copy, hover);
  }
  &:active {
    color: color(copy, active);
  }
}


// ----------------------------------------------------------------------- //


blockquote, dl, ol, p, pre, ul {
  @include nudge(margin-bottom, 1);
  &:last-child {
    margin-bottom: 0;
  }
}


// ----------------------------------------------------------------------- //


.page__content {
  $marginBottom: 1;
  h1, .h1 {
    @include nudge(margin, 0.5 0 $marginBottom);
  }
  h2, .h2 {
    @include nudge(margin, 0.5 0 $marginBottom);
  }
  h3, .h3 {
    @include nudge(margin, 0.5 0 $marginBottom);
  }
  h4, .h4 {
    @include nudge(margin, 0.5 0 $marginBottom);
  }
  h5, .h5 {
    @include nudge(margin, 0.5 0 $marginBottom);
  }
  h6, .h6 {
    @include nudge(margin, 0.5 0 $marginBottom);
  }
  h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {
    &:first-child {
      margin-top: 0;
    }
  }
  blockquote, dl, ol, p, pre, ul, img, figure, table, .obj-embed-container {
    @include nudge(margin-bottom, $marginBottom);
    img { // No margin on inner images.
      margin: 0;
    }
    &:last-child {
      margin-bottom: 0;
    }
  }
  ul, ol {
    margin-left: 1.2em;
    li {
      @include nudge(margin-bottom, ($marginBottom / 100 * 2));
    }
    ul, ol {
      margin-left: 1.2em;
      list-style-type: circle;
    }
  }
  ul {
    list-style-type: disc;
  }
  dl {
    dd {
      @include nudge(margin-bottom, ($marginBottom / 100 * 2));
      @include nudge(text-indent, 1);
    }
  }
  blockquote {
    @include nudge(padding, 0 ($marginBottom * 3));
    p {
      font-style: italic;
      font-family: $serif;
      &:before {
        content: open-quote;
      }
      &:after {
        content: close-quote;
      }
    }
    cite {
      font-weight: $bold;
    }
  }
}


// ----------------------------------------------------------------------- //


.page__hatnote {
  @include nudge(padding-left, 1);
  font-style: italic;
}


// ----------------------------------------------------------------------- //


p {
  code {
    color: color(green);
  }
}
code {
  font-weight: $regular;
  font-family: $monospaced;
  white-space: pre-wrap;
  word-wrap: break-word;
  tab-size: 4;
}
pre {
  @include nudge(padding, 0.5 0.75);
  border: 1px solid color(grey);
  position: relative;
  border-radius: $base_border_radius;
  background: color(grey, light);
}
kbd {
  @include nudge(padding, 0.25 0.5);
  margin: 0 0.25em;
  display: inline-block;
  border: 1px solid color(grey);
  border-radius: $base_border_radius;
  color: color(grey, medium);
  background: color(grey, light);
}


// ----------------------------------------------------------------------- //


@each $key, $value in $colors {
  .text {
    @if (color($key)) {
      &--color-#{"" + $key} {
        color: color($key) !important;
      }
    }
    @else {
      $subColors: $value;
      @each $subKey, $subValue in $subColors {
        &--color--#{"" + $key}-#{"" + $subKey} {
          color: color($key, $subKey) !important;
        }
      }
    }
  }
}


// ----------------------------------------------------------------------- //
