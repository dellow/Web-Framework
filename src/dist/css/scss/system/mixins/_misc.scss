// ==========================================================================
// Mixins > Misc
// Misc mixins.
// ==========================================================================


// ---
// nudge
// Primarily for use with Margin and Padding. Outputs an even spacing based on the Magic Number
// in REM units with a PX fallback for legacy browsers.
// Any value supplied will be multipled by the Magic Number. If the value is supplied with a
// PX value it will be left as is.
//
// @uses px-to-rem()
// @uses $mn
//
// .foo {@include nudge(margin, 1 1.5 2 1);}
// ---
@mixin nudge($selector, $sizes){
  $rem_sizes: ();
  $px_sizes: ();

  @each $size in $sizes {
    @if $size == "auto" {
      $rem_sizes: append($rem_sizes, auto);
      $px_sizes : append($px_sizes, auto);
    }
    @else if unit($size) != "" {
      $rem_sizes: append($rem_sizes, $size);
      $px_sizes : append($px_sizes, $size);
    }
    @else {
      $rem_sizes: append($rem_sizes, px-to-rem($size * $mn));
      $px_sizes : append($px_sizes, $size * $mn);
    }
  }

  #{$selector}: $px_sizes;
  #{$selector}: $rem_sizes;
}


// ----------------------------------------------------------------------- //


// ---
// slab
// Set's a consistent slab size.
//
// .foo {@include slab(2);}
// ---
@mixin slab($size, $modifier: false, $responsive: false){
  @if($responsive){
    // Desktop.
    @include respond-to-range(desktop){
      @if($modifier == 'ntp'){
        @include nudge(padding-bottom, $size);
      }
      @else if($modifier == 'nbp'){
        @include nudge(padding-top, $size);
      }
      @else {
        @include nudge(padding-top, $size);
        @include nudge(padding-bottom, $size);
      }
    }
    // Tablet.
    @include respond-to-range(tablet){
      @if($modifier == 'ntp'){
        @include nudge(padding-bottom, ($size / 2));
      }
      @else if($modifier == 'nbp'){
        @include nudge(padding-top, ($size / 2));
      }
      @else {
        @include nudge(padding-top, ($size / 2));
        @include nudge(padding-bottom, ($size / 2));
      }
    }
    // Mobile.
    @include respond-to-range(mobile){
      @if($modifier == 'ntp'){
        @include nudge(padding-bottom, ($size / 2));
      }
      @else if($modifier == 'nbp'){
        @include nudge(padding-top, ($size / 2));
      }
      @else {
        @include nudge(padding-top, ($size / 2));
        @include nudge(padding-bottom, ($size / 2));
      }
    }
  }
  @else {
    @if($modifier == 'ntp'){
      @include nudge(padding-bottom, $size);
    }
    @else if($modifier == 'nbp'){
      @include nudge(padding-top, $size);
    }
    @else {
      @include nudge(padding-top, $size);
      @include nudge(padding-bottom, $size);
    }
  }
}


// ----------------------------------------------------------------------- //
