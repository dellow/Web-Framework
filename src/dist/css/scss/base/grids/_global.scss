/* ==========================================================================
   Base > Grids > Global
   Global grid layouts.
========================================================================== */


/* -- Flex -- */
.flex-grid {
	@extend %flex;
	width: 100% + $gutter;
	margin-top: -$gutter;
	position: relative;
	left: -$gutter;
	// All columns
	[class*="col-"] {
		max-width: $col_1 - $gutter;
		flex-basis: $col_1 - $gutter;
		margin: $gutter 0 0 $gutter;
		// Abstractions
		&.left {
			text-align: left;
		}
		&.right {
			text-align: right;
		}
		&.center {
			text-align: center;
		}
	}
	// Abstractions
	&--no-gutter {
		width: $col_1;
		margin-top: 0;
		left: 0;
		[class*="col-"] {
			margin: 0;
		}
	}
	@each $key, $value in $col_array {
		.#{$key} {
			max-width: $value - $gutter;
			flex-basis: $value - $gutter;
		}
		&--no-gutter .#{$key} {
			max-width: $value;
			flex-basis: $value;
		}
	}
}


/* ----------------------------------------------------------------------- */


/* -- System -- */
.grid {
	width: 100% + $gutter;
	margin-top: -$gutter; // Will need to apply 'overflow: auto' to the parent item for this to work.
	@extend %cf;
	position: relative;
	left: -$gutter;
	[class*="col-"] {
		width: $col_1 - $gutter;
		margin: $gutter 0 0 $gutter;
		float: left;
		// Abstractions
		&.left {
			text-align: left;
		}
		&.right {
			text-align: right;
		}
		&.center {
			text-align: center;
		}
		&.fl {
			float: left;
		}
		&.fr {
			float: right;
		}
		// Pseudo
		&:last-child {
			margin-bottom: 0;
		}
	}
	// Abstractions
	&--no-gutter {
		width: $col_1;
		left: 0;
		[class*="col-"] {
			margin-left: 0;
		}
	}
	&--bricked {
		display: inline-block;
		letter-spacing: -4px; // Hack to prevent negative margin having weird effects
		[class*="col-"] {
			float: none;
			display: inline-block;
			vertical-align: top;
			letter-spacing: normal;
		}
	}
	// Columns.
	@each $key, $value in $col_array {
		.#{$key} {
			width: $value - $gutter;
		}
		&--no-gutter .#{$key} {
			width: $value;
		}
	}
}
