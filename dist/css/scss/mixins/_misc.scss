/* ==========================================================================
   Mixins > Misc
   Functions and mixins for various Framework operations.
========================================================================== */
/**
 * retina-image
 * Retina image replacement.
 *
 * .foo {@include retina-image('logo', 'png', 100px, 25px);}
**/
@mixin retina-image($image, $type, $width, $height){
	@media (min--moz-device-pixel-ratio: 1.3),
	     (-o-min-device-pixel-ratio: 2.6/2),
	     (-webkit-min-device-pixel-ratio: 1.3),
	     (min-device-pixel-ratio: 1.3),
	     (min-resolution: 1.3dppx){
		background-image: url($image + '@2x.' + $type);
		background-size: $width $height;
	}
	background-image: url($image + '.' + $type);
}

/**
 * underline
 * Better underline.
 *
 * .foo {@include underline(red);}
**/
@mixin underline($color){
	@if( $color == none or $color == '' ){
		background-image: none;
		background-position: 0% 0%;
		background-repeat: repeat;
		background-size: auto;
		&:hover {
			background-image: none;
			background-position: 0% 0%;
			background-repeat: repeat;
			background-size: auto;
		}
	}
	@else{
		background-image: -webkit-linear-gradient(top, rgba(0, 0, 0, 0) 50%, $color 50%);
		background-image: -moz-linear-gradient(top, rgba(0, 0, 0, 0) 50%, $color 50%);
		background-image: -o-linear-gradient(top, rgba(0, 0, 0, 0) 50%, $color 50%);
		background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 50%, $color 50%);
		background-position: 0 100%;
		background-repeat: repeat-x;
		background-size: 100% 0.15rem;
	}
}

/**
 * transition
 * Cross browser transition.
 *
 * .foo {@include transition(color $animation ease);}
**/
@mixin transition($pattern...){
	-webkit-transition: $pattern;
	-moz-transition   : $pattern;
	-o-transition     : $pattern;
	transition        : $pattern;
}

/**
 * transform
 * Cross browser transform.
 *
 * .foo {@include transform(scale(1.25));}
**/
@mixin transform($pattern...){
	-webkit-transform: $pattern;
	-moz-transform   : $pattern;
	-o-transform     : $pattern;
	transform        : $pattern;
}

/**
 * opacity
 * Cross browser opacity.
 *
 * .foo {@include opacity(0.7);}
**/
@mixin opacity($opacity){
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=(" + $opacity * 100 + "))";
	filter    : alpha(opacity=$opacity * 100);
	opacity   : $opacity;
}

/**
 * trigram
 * Trigram for Heaven mobile icon.
 *
 * .foo {@include trigram(30px, 40px, #000000, #FF0000);}
**/
@mixin trigram($width, $size, $color, $hover){
	position: relative;
	padding-left: 1.25em;
	font-size: $size;
	&:before {
		width: $width;
		height: 0.15em;
		content: "";
		position: absolute;
		left: 0;
		box-shadow: 0 0.25em 0 0 $color, 0 0.5em 0 0 $color;
		background: $color;
		@include transition(background $animation ease, box-shadow $animation ease);
	}
	&:hover:before {
		box-shadow: 0 0.25em 0 0 $hover, 0 0.5em 0 0 $hover;
		background: $hover;
	}
}

/**
 * arrow
 * CSS Arrow.
 *
 * .foo {@include arrow(15px, #f9f7f3, 10px, null, 5px, left);}
**/
@mixin arrow($size, $color, $top, $left, $margin, $position, $type: 'after'){
	&:#{$type} {
		width: 0;
		height: 0;
		position: relative;
		display: inline-block;
		top: $top;
		@if($left != null){
			left: $left;
		}
		border: solid transparent;
		content: " ";
		pointer-events: none;
		@if($position == left){
			@if($margin != null){
				margin-right: $margin;
			}
			border-right-color: $color;
		}
		@else if($position == right){
			@if($margin != null){
				margin-left: $margin;
			}
			border-left-color: $color;
		}
		@else if($position == top){
			@if($margin != null){
				margin-bottom: $margin;
			}
			border-bottom-color: $color;
		}
		@else if($position == bottom){
			@if($margin != null){
				margin-top: $margin;
			}
			border-top-color: $color;
		}
		border-width: $size;
	}
}
