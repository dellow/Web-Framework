/* ==========================================================================
   Grid
   Grid layouts.
========================================================================== */
$gutter_width: ($gutter / 2);

/* -- Flex -- */
.flex-grid {
	width: 100% + $gutter_width;
	margin-top: -$gutter_width;
	position: relative;
	left: -$gutter_width;
	// Flex
	display               : -webkit-box;
	display               : -webkit-flex;
	display               : -ms-flexbox;
	display               : flex;
	-webkit-box-orient    : horizontal;
	-webkit-box-direction : normal;
	-webkit-flex-direction: row;
	-ms-flex-direction    : row;
	flex-direction        : row;
	-webkit-flex-wrap     : wrap;
	-ms-flex-wrap         : wrap;
	flex-wrap             : wrap;
	// All columns
	[class*="col-"] {
		max-width              : $col_1 - $gutter_width;
		-webkit-flex-basis     : $col_1 - $gutter_width;
		-ms-flex-preferred-size: $col_1 - $gutter_width;
		flex-basis             : $col_1 - $gutter_width;
		margin: $gutter_width 0 0 $gutter_width;
		// Abstractions
		&.left {
			text-align: left;
		}
		&.right {
			text-align: right;
		}
		&.center {
			text-align: center;
		}
	}
	@each $key, $value in $col_array {
		.#{$key} {
			max-width              : $value - $gutter_width;
			-webkit-flex-basis     : $value - $gutter_width;
			-ms-flex-preferred-size: $value - $gutter_width;
			flex-basis             : $value - $gutter_width;
		}
		&.no-gutter .#{$key} {
			max-width              : $value;
			-webkit-flex-basis     : $value;
			-ms-flex-preferred-size: $value;
			flex-basis             : $value;
		}
	}
}

/* -- System -- */
.grid {
	width: 100% + $gutter_width;
	margin-top: -$gutter_width;
	@extend %cf;
	position: relative;
	left: -$gutter_width;
	[class*="col-"] {
		width: $col_1 - $gutter_width;
		margin: $gutter_width 0 0 $gutter_width;
		float: left;
		// Abstractions
		&.left {
			text-align: left;
		}
		&.right {
			text-align: right;
		}
		&.center {
			text-align: center;
		}
		&.fl {
			float: left;
		}
		&.fr {
			float: right;
		}
		// Pseudo
		&:last-child {
			margin-bottom: 0;
		}
	}
	// Abstractions
	&.no-gutter {
		width: $col_1;
		left: 0;
		[class*="col-"] {
			margin: 0;
		}
	}
	&.bricked {
		@include inline-block; // Hack to prevent negative margin having weird effects
		letter-spacing: -4px;
		[class*="col-"] {
			float: none;
			@include inline-block;
			vertical-align: top;
			letter-spacing: normal;
		}
	}

	@each $key, $value in $col_array {
		.#{$key} {
			width: $value - $gutter_width;
		}
		&.no-gutter .#{$key} {
			width: $value;
		}
	}
}