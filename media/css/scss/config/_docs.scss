/* ==========================================================================
   Docs
   CSS examples and experimental features
========================================================================== */
/**
 * em Conversion px / 16 = em
 * Font-size conversion 16px = 1.00em = 100% = 12pt
 * font: font-style font-variant font-weight font-size/line-height font-family;
 * Only use !important as a LAST RESORT
**/

/* -- Attributes: Use specific icon depending on link type -- */
.foo li a
{background: url(../images/icons/htm.gif) no-repeat; padding: 0.2% 0 0 2.5%;}
.foo li a[href$='.doc']
{background: url(../images/icons/doc.gif) no-repeat;}
.foo li a[href$='.gif']
{background: url(../images/icons/gif.gif) no-repeat;}
.foo li a[href$='.htm']
{background: url(../images/icons/htm.gif) no-repeat;}
.foo li a[href$='.html']
{background: url(../images/icons/htm.gif) no-repeat;}
.foo li a[href$='.php']
{background: url(../images/icons/htm.gif) no-repeat;}
.foo li a[href$='.jpg']
{background: url(../images/icons/jpg.gif) no-repeat;}
.foo li a[href$='.mp3']
{background: url(../images/icons/mp3.gif) no-repeat;}
.foo li a[href$='.pdf']
{background: url(../images/icons/pdf.gif) no-repeat;}
.foo li a[href$='.png']
{background: url(../images/icons/png.gif) no-repeat;}
.foo li a[href$='.ppt']
{background: url(../images/icons/ppt.gif) no-repeat;}
.foo li a[href$='.txt']
{background: url(../images/icons/txt.gif) no-repeat;}
.foo li a[href$='.xls']
{background: url(../images/icons/xls.gif) no-repeat;}

/* -- CSS Attribute selection -- */
.foo[attr='target'] { /* Targets attribute exactly matching "target" */
}
.foo[attr*='target'] { /* Targets attributes with "target" anywhere in the attribute */
}
.foo[attr^='target'] { /* Targets attributes starting with "target" */
}
.foo[attr$='target'] { /* Targets attributes ending with "target" */
}
.foo[attr~='target'] { /* Targets attributes with "target" in space separated list */
}
.foo[attr|='target'] { /* Targets attributes with "target" in hyphen separated list */
}
.foo[attr='target'][attr2='target'] { /* Targets multiple attributes */
}
/* -- Elements with ID: #target_hash will highlight when the URL is www.domain.com/#target_hash -- */
#target_hash:target {
	color: #ff0000;
}

/* -- Highlight target="_blank" links -- */
.foo[target="_blank"]:before, a.foo[target="new"]:before {
	margin: 0 5px 0 0;
	padding: 1px;

	content: '\279C';
	outline: 1px solid #333;
	font: 12px 'Zapf Dingbats';
	color: #333;
	background: #ff9;
}

/* -- Cross browser RGBA -- */
.foo {
	background: rgba(255,200,35,0.5);
	-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#550000FF, endColorstr=#550000FF)";
	filter    : progid:DXImageTransform.Microsoft.gradient(startColorstr=#550000FF, endColorstr=#550000FF);
}

/* -- Retina Sprites -- */
.foo-1, .foo-2 {
	background: url(../images/siteimages/sprite.jpg) no-repeat 0 0;
}
.foo-1 {
	background-position: 0 0;
}
.foo-2 {
	background-position: 0 -20px;
}
@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2){
	.foo-1, .foo-2 {
		background-image: url(sprite@2.png);
		background-size: 200px 200px;
	}
}

/* -- Disable mobile popup on held links -- */
.foo {
	-webkit-touch-callout: none;
	-moz-touch-callout   : none;
	touch-callout        : none;
}

/* ==========================================================================
   $Unsupported
========================================================================== */
/* -- Ligatures -- */
.foo {
	font-feature-settings: 'liga';
}

/* -- Viewport-relative lengths -- */
.foo {
	height: 50vh;
}

/* -- Calculated Values -- */
.foo {
	margin: 0 20px;
	-webkit-width: calc(33% - 40px); /* Calculated value allow mixing of units. Percentage sized boxes with fixed margins */
	-moz-width   : calc(33% - 40px);
	-o-width     : calc(33% - 40px);
	width        : calc(33% - 40px);
}

/* -- Negation pseudo class -- */
.foo:nth-child(odd):not(:last-child){
	color: #F00;
}

/* -- Matches pseudo class -- */
.foo:matches(header, footer, aside) p {
	color: #F00;
}

/* -- Filters -- */
.foo {
	-webkit-filter: blur(1px);
	-webkit-filter: grayscale(1);
	-webkit-filter: drop-shadow(1px 1px 20px black);
	-webkit-filter: sepia(1);
	-webkit-filter: brightness(2.9);
	-webkit-filter: contrast(1.4);
	-webkit-filter: hue-rotate(240deg);
	-webkit-filter: invert(1);
	-webkit-filter: saturate(10);
	-webkit-filter: opacity(1);
}

/* -- Chained Filters -- */
.foo {
	-webkit-filter: blur(10px) brightness(0.5) hue-rotate(360deg) saturate(10);
}

/* -- Display Box Vertical Align -- */
.foo {
	display: -webkit-box;
	-webkit-box-orient:vertical;
	-webkit-box-pack  :center;
	-webkit-box-align :center;

	display: -moz-box;
	-moz-box-orient:vertical;
	-moz-box-pack  :center;
	-moz-box-align :center;

	display: box;
	box-orient:vertical;
	box-pack  :center;
	box-align :center;
}
